"""
    Kafka consumer based on
    https://github.com/confluentinc/confluent-kafka-python
"""

from context import HistClient, wait_for_it


class Plotter(HistClient):
    """ Plotter """

    def __init__(self, topic):
        super().__init__(topic=topic)

    def consume(self):
        """
            Obtains a message from a kafka topic and computes the histogram.

            Returns:
                A dictionary with the kafka message, histogram and bin edges
        """
        for msg in self._consumer:
            yield self.plot(hist=msg.value["hist"], bin_edges=msg.value["bin_edges"])


def main():
    """ Prints the scatter plots generated by the measurement consumer """

    plotter = Plotter(topic="hist_temperature")
    for plot in plotter.consume():
        print(plot)


if __name__ == "__main__":
    wait_for_it()
    main()
